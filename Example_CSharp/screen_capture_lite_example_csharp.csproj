<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net5.0</TargetFramework>
   <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
   <Platforms>x64;x86</Platforms> 
  </PropertyGroup>

  <ItemGroup>
    <None Remove="screen_capture_lite_shared.dll" />
  </ItemGroup>
 
  <ItemGroup>   
    <Compile Include="Program.cs" />
    <Compile Include="..\src_csharp\MonitorCaptureConfiguration.cs" Link="MonitorCaptureConfiguration.cs" />
    <Compile Include="..\src_csharp\NativeFunctions.cs" Link="NativeFunctions.cs" />
    <Compile Include="..\src_csharp\NativeTypes.cs" Link="NativeTypes.cs" />
    <Compile Include="..\src_csharp\ScreenCaptureManager.cs" Link="ScreenCaptureManager.cs" />
    <Compile Include="..\src_csharp\UnmanagedUtility.cs" Link="UnmanagedUtility.cs" />
    <Compile Include="..\src_csharp\WindowCaptureConfiguration.cs" Link="WindowCaptureConfiguration.cs" />
  </ItemGroup>
 
  <ItemGroup> 
   <Content Include="screen_capture_lite_shared.dll" Condition=" '$(OS)' == 'Windows_NT' ">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="libscreen_capture_lite_shared.so" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' ">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="libscreen_capture_lite_shared.dylib" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' ">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content> 
  </ItemGroup>
 
  <ItemGroup>
    <PackageReference Include="System.Drawing.Common" Version="5.0.3" />
  </ItemGroup>

</Project>
